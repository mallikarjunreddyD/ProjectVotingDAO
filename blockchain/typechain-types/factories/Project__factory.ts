/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Project, ProjectInterface } from "../Project";

const _abi = [
  {
    inputs: [],
    name: "maxProjectsReached",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "problemStatement",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "studentName",
        type: "string",
      },
    ],
    name: "projectAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "problemStatement",
        type: "string",
      },
      {
        internalType: "string",
        name: "studentName",
        type: "string",
      },
    ],
    name: "addProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "enum project.Feedback",
        name: "fb",
        type: "uint8",
      },
    ],
    name: "addVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProjects",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxNumProjects",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526038600155600060025534801561001a57600080fd5b5061002433610029565b610079565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610867806100886000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063980c308d1161005b578063980c308d146100c4578063a00f89ed146100d7578063e7fb03dd146100e0578063f2fde38b146100f357600080fd5b80631a509bdb14610082578063715018a6146100a15780638da5cb5b146100ab575b600080fd5b61008b60015481565b60405161009891906102dc565b60405180910390f35b6100a9610106565b005b6000546001600160a01b0316604051610098919061030a565b6100a96100d236600461041b565b61011a565b61008b60025481565b6100a96100ee3660046104bd565b6101d4565b6100a9610101366004610504565b610217565b61010e61025a565b6101186000610284565b565b6001546002540361013e57604051632e1e691960e01b815260040160405180910390fd5b600254600081815260036020526040902090815560010161015f8382610610565b506002805460009081526003602052604090200161017d8282610610565b506002805490600061018e836106ea565b91905055507f108f36559fad7af46c996e718c2e49085b2ade286b04a50390a03d847215215b60025483836040516101c89392919061075a565b60405180910390a15050565b6101dc61025a565b600082815260036020819052604090912081018054839260ff1990911690600190849081111561020e5761020e610797565b02179055505050565b61021f61025a565b6001600160a01b03811661024e5760405162461bcd60e51b8152600401610245906107ad565b60405180910390fd5b61025781610284565b50565b6000546001600160a01b031633146101185760405162461bcd60e51b8152600401610245906107f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805b82525050565b602081016102ea82846102d4565b92915050565b60006001600160a01b0382166102ea565b6102d6816102f0565b602081016102ea8284610301565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561035457610354610318565b6040525050565b600061036660405190565b9050610372828261032e565b919050565b600067ffffffffffffffff82111561039157610391610318565b601f19601f83011660200192915050565b82818337506000910152565b60006103c16103bc84610377565b61035b565b9050828152602081018484840111156103dc576103dc600080fd5b6103e78482856103a2565b509392505050565b600082601f83011261040357610403600080fd5b81356104138482602086016103ae565b949350505050565b6000806040838503121561043157610431600080fd5b823567ffffffffffffffff81111561044b5761044b600080fd5b610457858286016103ef565b925050602083013567ffffffffffffffff81111561047757610477600080fd5b610483858286016103ef565b9150509250929050565b805b811461025757600080fd5b80356102ea8161048d565b6004811061025757600080fd5b80356102ea816104a5565b600080604083850312156104d3576104d3600080fd5b60006104df858561049a565b9250506020610483858286016104b2565b61048f816102f0565b80356102ea816104f0565b60006020828403121561051957610519600080fd5b600061041384846104f9565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061054f57607f821691505b60208210810361056157610561610525565b50919050565b60006102ea6105738381565b90565b61057f83610567565b81546008840282811b60001990911b908116901990911617825550505050565b60006105ac818484610576565b505050565b818110156105cc576105c460008261059f565b6001016105b1565b5050565b601f8211156105ac576000818152602090206020601f850104810160208510156105f75750805b6106096020601f8601048301826105b1565b5050505050565b815167ffffffffffffffff81111561062a5761062a610318565b610634825461053b565b61063f8282856105d0565b6020601f831160018114610673576000841561065b5750858201515b600019600886021c19811660028602178655506106cc565b600085815260208120601f198616915b828110156106a35788850151825560209485019460019092019101610683565b868310156106bf5784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982036106fd576106fd6106d4565b5060010190565b60005b8381101561071f578181015183820152602001610707565b50506000910152565b6000610732825190565b808452602084019350610749818560208601610704565b601f01601f19169290920192915050565b6060810161076882866102d4565b818103602083015261077a8185610728565b9050818103604083015261078e8184610728565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b602080825281016102ea81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082016102ea56fea264697066735822122037d0f8071ffe3847debdb559120f81d6c3959232abd8eb4ebe86debafa6316ef64736f6c63430008110033";

type ProjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Project__factory extends ContractFactory {
  constructor(...args: ProjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Project";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Project> {
    return super.deploy(overrides || {}) as Promise<Project>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Project {
    return super.attach(address) as Project;
  }
  connect(signer: Signer): Project__factory {
    return super.connect(signer) as Project__factory;
  }
  static readonly contractName: "Project";
  public readonly contractName: "Project";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectInterface {
    return new utils.Interface(_abi) as ProjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Project {
    return new Contract(address, _abi, signerOrProvider) as Project;
  }
}
